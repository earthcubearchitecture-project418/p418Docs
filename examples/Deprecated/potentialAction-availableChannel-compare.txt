 Service approach, from current (2018-01-15) bco-dmo.org JSONLD---
"Service".....
 "availableChannel": 
        {
            "@type": "ServiceChannel",
            "serviceUrl": "https://www.bco-dmo.org/search",
            "providesService": {
                "@type": "Service",
                "@id": "https://www.bco-dmo.org/search",
                "additionalType": "gdx:SearchService",
                "name": "BCO-DMO Website Search",
                "description": "Search for webpages, datasets, people, projects, funding awards, deployments, instrumentation and measurements",
                "potentialAction": {
                    "@type": "SearchAction",
                    "target": "https://www.bco-dmo.org/search?keywords={query_string}",
                    "query-input": {
                        "@type": "PropertyValueSpecification",
                        "valueRequired": true,
                        "valueName": "query_string"
                    }
                }
            }
        },
NOTES.
"target"  value should be type EntryPoint (https://pending.schema.org/target)		
Adds several levels of nesting before getting to the URL template:
Service.availableChannel-->ServiceChannel.providesService-->Service.potentialAction-->SearchAction.target--EntryPoint.urlTemplate
Since Service is a Thing, it has potentialAction, so this could be constructed using the same approach as Organization.  The question is, what benefit is gained by the ServiceChannel and intermediary Service classes?

	
	
Organization approach, based on EarthCube CDF project examples---
"Organization"....
    "potentialAction": 
        {
            "@type": "SearchAction",
			"additionalType": "gdx:SearchService",
            "name":"IEDA Integrated Catalog Search",
			"description": "Search the IEDA integrated catalog. search_term_string is used for a free text search of Titles, Abstracts and Keywords in the catalog.",
            "target": {
                "@type": "EntryPoint",
                "urlTemplate": "http://catalog-dev.iedadata.org:8080/geoportal/?q={search_term_string}",
                "query-input": {
                        "@type": "PropertyValueSpecification",
                        "valueRequired": true,
                        "valueName": "search_term_string"
                        },
                "httpMethod": "GET"
            }
        }

Fewer levels of nesting
Organization(or Service).potentialAction --> SearchAction.target --> EntryPoint.urlTemplate
